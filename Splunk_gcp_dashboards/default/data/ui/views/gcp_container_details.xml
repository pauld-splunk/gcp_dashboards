<!-- v1.6-->
<form version="1.1">
  <label>GCP Containers Metrics</label>

  <init>
    <set token="minspan">60</set>
    <set token="show_annotations">*</set>
  </init>
  <search id="source_data_query">
    <query>
      |makeresults | eval addon="data."| eval dataflow="" 
      |eval datatag=`datatag`
    </query>
    <done>
      <set token="datatag">$result.datatag$</set>
    </done>
  </search>
  <search id="metrics_source_query">
    <query>
      |makeresults 
      | eval addon="addon"
      | eval metrics="metrics" 
      | eval sim="sim"
      | eval metricstag=`metricstag`
      
      | eval base_metrics_container_search=
            if(metricstag=="metrics", 
              "| mstats avg(_value) prestats=true WHERE metric_name=\"*container*\" AND `gcp_metrics` AND project_id IN ($project_id_tok$) AND location IN ($zone_tok$) AND cluster_name IN ($cluster_tok$) span=$secs_for_bin$s by cluster_name",
              (if (metricstag=="sim",
              " | sim flow query=\"data('container*', filter=filter('service', 'kubernetes') and filter('cluster_name','$cluster_tok$')).publish()\" resolution=6000",
              (if (metricstag=="addon", 
              "`gcp_metrics` sourcetype=google:gcp:monitoring metric.type=\"kubernetes.io/container*\" resource.labels.cluster_name=$cluster_tok$ earliest=$time.earliest$ latest=$time.latest$ | rename metric.type AS metric_name points{}.value.int64Value as int64Value points{}.value.doubleValue as doubleValue resource.labels.cluster_name as cluster_name |eval _value=if(int64Value&gt;0, int64Value, doubleValue)","")))))
              
              
      | eval base_metrics_node_search=
            if(metricstag=="metrics", 
              "| mstats avg(_value)  prestats=true WHERE metric_name=\"*node/*\" AND `gcp_metrics` AND project_id IN ($project_id_tok$) AND location IN ($zone_tok$) AND cluster_name IN ($cluster_tok$) span=$secs_for_bin$s by node_name",
            (if (metricstag=="sim", 
              " | sim flow query=\"data('node*', filter=filter('service', 'kubernetes') and filter('cluster_name','$cluster_tok$')).publish()\" resolution=6000",
            (if (metricstag=="addon", "`gcp_metrics` sourcetype=google:gcp:monitoring metric.type=\"kubernetes.io/node*\" resource.labels.cluster_name=$cluster_tok$ earliest=$time.earliest$ latest=$time.latest$ | rename metric.type AS metric_name points{}.value.int64Value as int64Value points{}.value.doubleValue as doubleValue resource.labels.node_name as node_name |eval _value=if(int64Value&gt;0, int64Value, doubleValue)","")))))        
            
      
      
    </query>
    <done>
      <set token="metrics_source">$result.metricstag$</set>
      <set token="base_metrics_container_search">$result.base_metrics_container_search$</set>
      <set token="base_metrics_node_search">$result.base_metrics_node_search$</set>
    </done>
  </search>
  <search id="base_metrics_container">
    <query>
      $base_metrics_container_search$
    </query>
    <earliest>$time.earliest$</earliest>
    <latest>$time.latest$</latest>
  </search>
  <search id="base_metrics_node">
    <query>
      $base_metrics_node_search$
    </query>
    <earliest>$time.earliest$</earliest>
    <latest>$time.latest$</latest>
  </search>
  <search id="tstats_query">
    <query>
      |makeresults 
      |eval usetstats="Yes" 
      |eval notstats="No"
      |eval tstatstag=`tstatstag`
      
      |eval tstats_count=if(tstatstag=="Yes", "|tstats count where","")
      |eval tstats_nulls=if(tstatstag=="Yes", "|tstats fillnull_value=\"-\" count where","")
      
      |eval tstats_dc_name=if(tstatstag=="Yes", "|tstats dc(name) as Count where","")
      |eval stats_dc_name=if(tstatstag=="No","|stats dc(name) as Count ","")
      
      |eval stats_count=if(tstatstag=="No", "|stats count ", "")
      
      |eval count_type=if(tstatstag!=" ","sum(count)","count")
      
      |eval tstats_by_base=if(tstatstag=="Yes"," by name, resource.data.id, resource.data.name, resource.data.machineType, resource.data.cpuPlatform, resource.data.zone, resource.data.status, resource.data.deletionProtection, resource.data.selfLink, \"resource.data.disks{}.licenses{}\"", "")
      
      |eval tstats_by_id=if(tstatstag=="Yes"," by resource.data.id ","")
      
      |eval tstats_by_annotation=if(tstatstag=="Yes"," by _time, $datatag$resource.type $datatag$protoPayload.methodName $datatag$severity $datatag$jsonPayload.info{}.detail_message $datatag$jsonPayload.event_subtype, $datatag$jsonPayload.MESSAGE, $datatag$jsonPayload._EXE, $datatag$jsonPayload.SYSLOG_IDENTIFIER, $datatag$jsonPayload._SYSTEMD_UNIT, $datatag$jsonPayload.message, $datatag$resource.labels.disk_id span=1s", "")
      
    </query>
    <done>
      <set token="tstats_dc_name">$result.tstats_dc_name$</set>
      <set token="stats_dc_name">$result.stats_dc_name$</set>
      <set token="tstats_nulls">$result.tstats_nulls$</set>
      <set token="stats_count">$result.stats_count$</set>
      <set token="tstats_count">$result.tstats_count$</set>
      <set token="count_type">$result.count_type$</set>
      <set token="tstats_by_base">$result.tstats_by_base$</set>
      <set token="tstats_by_id">$result.tstats_by_id$</set>
      <set token="tstats_by_annotation">$result.tstats_by_annotation$</set>
    </done>
  </search>
  <search id="baseInfo">
    <query>
    $tstats_dc_name$  `gcp_assets_index` (sourcetype="google:gcp:assets" OR sourcetype=google:gcp:buckets:jsondata) asset_type="k8s.io/Node" $stats_dc_name$ by name,resource.data.metadata.name, resource.data.metadata.annotations.container.googleapis.com/instance_id,resource.data.metadata.labels.beta.kubernetes.io/instance-type, resource.data.metadata.labels.kubernetes.io/hostname, resource.data.metadata.labels.cloud.google.com/gke-nodepool, resource.data.status.nodeInfo.containerRuntimeVersion 
| rename name as Name,resource.data.metadata.name as NodeName, resource.data.metadata.annotations.container.googleapis.com/instance_id as Instance_ID, resource.data.metadata.labels.beta.kubernetes.io/instance-type as InstanceType, resource.data.metadata.labels.kubernetes.io/hostname as HostName, resource.data.metadata.labels.cloud.google.com/gke-nodepool as NodePool, resource.data.status.nodeInfo.containerRuntimeVersion as containerRuntimeVersion
| eval ProjectID=replace(Name,"^\S+projects\/(\S+)\/(zones|locations)\S*","\1")
| eval Zone=replace(Name,"^\S+(zones|locations)\/(\S+)\/clusters\S*","\2")
| eval ClusterName=replace(Name,"^\S+clusters\/(\S+)\/k8s\S*","\1")
    </query>
  </search>
  <fieldset submitButton="false">
    <input type="time" searchWhenChanged="true" token="time">
      <label>Time Range</label>
      <default>
        <earliest>-1h</earliest>
        <latest>now</latest>
      </default>
    </input>
    <input type="dropdown" token="project_id_tok" searchWhenChanged="true">
      <label>Project ID</label>
      <choice value="*">ALL</choice>
      <default>*</default>
      <initialValue>*</initialValue>
      <delimiter> ,</delimiter>
      <fieldForLabel>ProjectID</fieldForLabel>
      <fieldForValue>ProjectID</fieldForValue>
      <search base="baseInfo">
        <query>stats count by ProjectID</query>
      </search>
    </input>
    <input type="dropdown" token="zone_tok" searchWhenChanged="true">
      <label>Zones</label>
      <choice value="*">ALL</choice>
      <default>*</default>
      <initialValue>*</initialValue>
      <fieldForLabel>Zone</fieldForLabel>
      <fieldForValue>Zone</fieldForValue>
      <search base="baseInfo">
        <query>search ProjectID IN ($project_id_tok$)|stats count by Zone</query>
      </search>
      <delimiter>,</delimiter>
    </input>
    <input type="dropdown" token="cluster_tok" searchWhenChanged="true">
      <label>Cluster</label>
      <choice value="*">ALL</choice>
      <default>*</default>
      <initialValue>*</initialValue>
      <fieldForLabel>ClusterName</fieldForLabel>
      <fieldForValue>ClusterName</fieldForValue>
      <search base="baseInfo">
        <query>search ProjectID IN ($project_id_tok$) AND Zone IN ($zone_tok$)|stats count by ClusterName</query>
      </search>
      <delimiter>,</delimiter>
    </input>
    <input type="dropdown" token="time_resolution" searchWhenChanged="true">
      <label>Chart resolution</label>
      <choice value="100">Crude</choice>
      <choice value="250">Low</choice>
      <choice value="500">Medium</choice>
      <choice value="750">High</choice>
      <choice value="999">Ultra</choice>
      <change>
        <eval token="form.secs_for_bin">if(isnull($time.latest$),$minspan$, if((round(relative_time(now(), $time.latest$)-relative_time(now(), $time.earliest$))/$time_resolution$)&lt;$minspan$,$minspan$,round(((relative_time(now(), $time.latest$)-relative_time(now(), $time.earliest$))/$time_resolution$)/$minspan$)*$minspan$))</eval>
      </change>
      <default>500</default>
      <initialValue>500</initialValue>
    </input>
    <input type="text" token="secs_for_bin" depends="$never$">
      <label>secs_for_bin</label>
      <default>1200</default>
    </input>
  </fieldset>
  <row>
    <panel>
      <title>container/cpu/request_utilization</title>
      <chart>
        <search base="annotations" type="annotation"></search>
        <search base="base_metrics_container">
          <query>
            | search metric_name="*container/cpu/request_utilization"
            | timechart avg(_value) as Avg span=$secs_for_bin$s by cluster_name
            | fields - _span* VALUE
            
          </query>
        </search>
        <option name="charting.axisY.abbreviation">auto</option>
        <option name="charting.axisY.includeZero">1</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.gridLinesX.showMajorLines">1</option>
        <option name="charting.legend.mode">seriesCompare</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>container/memory/request_utilization</title>
      <chart>
        <search base="base_metrics_container">
          <query>
            | search metric_name="*container/memory/request_utilization"
            | timechart avg(_value) as Avg span=$secs_for_bin$s by cluster_name
            | fields - _span* VALUE
            
          </query>
        </search>
        <option name="charting.axisY.abbreviation">auto</option>
        <option name="charting.axisY.includeZero">1</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.gridLinesX.showMajorLines">1</option>
        <option name="charting.legend.mode">seriesCompare</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <title>container/memory/used_bytes</title>
      <chart>
        <search base="base_metrics_container">
          <query>
            
            | search metric_name="*container/memory/used_bytes"
            | timechart avg(_value) as Avg span=$secs_for_bin$s by cluster_name
            | fields - _span* VALUE

          </query>
        </search>
        <option name="charting.axisY.abbreviation">auto</option>
        <option name="charting.axisY.includeZero">1</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.gridLinesX.showMajorLines">1</option>
        <option name="charting.legend.mode">seriesCompare</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>node/ephemeral_storage/used_bytes</title>
      <chart>
        <search base="base_metrics_node">
          <query>
            |search metric_name="*node/ephemeral_storage/used_bytes"
            | timechart avg(_value) as Avg span=$secs_for_bin$s by node_name
            | fields - _span*
           
          </query>
        </search>
        <option name="charting.axisY.abbreviation">auto</option>
        <option name="charting.axisY.includeZero">1</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.gridLinesX.showMajorLines">1</option>
        <option name="charting.legend.mode">seriesCompare</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <title>node/ephemeral_storage/total_bytes</title>
      <chart>
        <search base="base_metrics_node">
          <query>
            |search metric_name="*node/ephemeral_storage/total_bytes"
            | timechart avg(_value) as Avg span=$secs_for_bin$s by node_name
            | fields - _span* 
            
          </query>
        </search>
        <option name="charting.axisY.abbreviation">auto</option>
        <option name="charting.axisY.includeZero">1</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.gridLinesX.showMajorLines">1</option>
        <option name="charting.legend.mode">seriesCompare</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>node/network/received_bytes_count</title>
      <chart>
        <search base="base_metrics_node">
          <query>|search metric_name="*node/network/received_bytes_count"
            | timechart avg(_value) as Avg span=$secs_for_bin$s by node_name
            | fields - _span* </query>
        </search>
        <option name="charting.axisY.abbreviation">auto</option>
        <option name="charting.axisY.includeZero">1</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.gridLinesX.showMajorLines">1</option>
        <option name="charting.legend.mode">seriesCompare</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <title>node/network/sent_bytes_count</title>
      <chart>
        <search base="base_metrics_node">
          <query>|search metric_name="*node/network/sent_bytes_count"
            | timechart avg(_value) as Avg span=$secs_for_bin$s by node_name
            | fields - _span* </query>
        </search>
        <option name="charting.axisY.abbreviation">auto</option>
        <option name="charting.axisY.includeZero">1</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.gridLinesX.showMajorLines">1</option>
        <option name="charting.legend.mode">seriesCompare</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel depends="$hide$">
      <table>
        <search id="eventBase">
          <query>$tstats_nulls$ `gcp_index`  sourcetype=google:gcp:pubsub:message $datatag$protoPayload.serviceName="k8s.io" $datatag$resource.labels.cluster_name IN ($cluster_tok$) $datatag$resource.labels.project_id IN ($project_id_tok$)
       $stats_count$ by _time, $datatag$resource.labels.project_id,data.logName,data.protoPayload.resourceName, $datatag$resource.type, $datatag$protoPayload.authenticationInfo.principalEmail, $datatag$protoPayload.serviceName, $datatag$protoPayload.methodName, $datatag$protoPayload.requestMetadata.callerIp, $datatag$protoPayload.requestMetadata.callerSuppliedUserAgent, $datatag$labels.authorization.k8s.io/decision, $datatag$labels.authorization.k8s.io/reason
       | rename $datatag$resource.labels.project_id as ProjectID, $datatag$logName as LogName, $datatag$protoPayload.authenticationInfo.principalEmail as Email, $datatag$protoPayload.serviceName as ServiceName, $datatag$protoPayload.resourceName as ResourceName, $datatag$resource.type as ResourceType, $datatag$protoPayload.methodName as MethodName, $datatag$protoPayload.requestMetadata.callerIp as CallerIP, $datatag$protoPayload.requestMetadata.callerSuppliedUserAgent as UserAgent $datatag$labels.authorization.k8s.io/decision as Decision $datatag$labels.authorization.k8s.io/reason as Reason</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel depends="$hide$">
      <table>
        <search base="eventBase" id="annotations">
          <query>
              | eval annotation_category ='Decision'+", "+'Reason'
|eval annotation_label ='MethodName'
|top limit=1000 _time, annotation_label, annotation_category 
|table _time, annotation*
</query>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
</form>