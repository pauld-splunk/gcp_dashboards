<!-- Cloud Functions Overview v2.2-->
<form version="1.1">
  <label>GCP Cloud Functions Overview</label>
  

  <search id="metrics_source_query">
    <query>
      |makeresults 
      | eval addon="addon"
      | eval metrics="metrics" 
      | eval sim="sim"
      | eval metricstag=`metricstag`
      
      | eval base_info_search=
            if(metricstag=="metrics", 
              "| mstats max(_value) as _value  WHERE `gcp_metrics` metric_name=\"cloudfunctions.googleapis.com/function/*\"  span=1h earliest=$time.earliest$ latest=$time.latest$ BY function_name, project_id,region, memory,status, trigger_metric_name | stats count by function_name,project_id,region, memory,status, trigger_metric_name",
            (if (metricstag=="sim", 
              "| sim flow query=\"data('function/execution_times', filter=filter('service', 'cloudfunctions')).publish()\" | stats count by function_name, project_id, region, memory, status, trigger_type | dedup function_name,project_id",
            (if (metricstag=="addon", "`gcp_metrics` sourcetype=google:gcp:monitoring | stats count by resource.labels.function_name, resource.labels.project_id, resource.labels.region, metric.labels.memory, metric.labels.status, metric.labels.trigger_type |rename resource.labels.function_name as function_name, resource.labels.project_id as project_id, resource.labels.region as region, metric.labels.memory as memory, metric.labels.status as status, metric.labels.trigger_type
 as trigger_metric_name","")))))
      
      |eval fn_execution=
            if(metricstag=="metrics",
              "| mstats avg(_value) as _value WHERE `gcp_metrics` metric_name=\"cloudfunctions.googleapis.com/function/execution_times\"  AND project_id IN ($project_id_tok$) AND region IN ($zone_tok$) AND function_name IN ($function_tok$) span=$secs_for_bin$s BY function_name",
            (if (metricstag=="sim", 
              "| sim flow query=\"data('function/execution_times', filter=filter('service', 'cloudfunctions') and filter('project_id','$project_id_tok$') and filter('region','$zone_tok$') and filter('function_name','$function_tok$')).publish()\"",
            (if (metricstag=="addon",
              "`gcp_metrics` sourcetype=google:gcp:monitoring resource.labels.project_id=$project_id_tok$ resource.labels.region=$zone_tok$ resource.labels.function_name=$function_tok$ metric.type=cloudfunctions.googleapis.com/function/execution_times |rename points{}.value.distributionValue.mean as _value resource.labels.function_name as function_name","")))))
      
      |eval fn_execution_count=
            if(metricstag=="metrics",
              "| mstats avg(_value) as _value WHERE `gcp_metrics` metric_name=\"cloudfunctions.googleapis.com/function/execution_count\"  AND project_id IN ($project_id_tok$) AND region IN ($zone_tok$) AND function_name IN ($function_tok$) span=$secs_for_bin$s BY function_name",
            (if (metricstag=="sim", 
              "| sim flow query=\"data('function/execution_count', filter=filter('service', 'cloudfunctions') and filter('project_id','$project_id_tok$') and filter('region','$zone_tok$') and filter('function_name','$function_tok$')).publish()\"",
            (if (metricstag=="addon",
              "`gcp_metrics` sourcetype=google:gcp:monitoring resource.labels.project_id=$project_id_tok$ resource.labels.region=$zone_tok$ resource.labels.function_name=$function_tok$ metric.type=cloudfunctions.googleapis.com/function/execution_count
|rename points{}.value.int64Value as _value resource.labels.function_name as function_name","")))))
      
      |eval fn_instances=
          if(metricstag=="metrics",
            "| mstats avg(_value) as _value WHERE `gcp_metrics` metric_name=\"cloudfunctions.googleapis.com/function/active_instances\"  AND project_id IN ($project_id_tok$) AND region IN ($zone_tok$) AND function_name IN ($function_tok$) span=$secs_for_bin$s BY function_name",
          (if (metricstag=="sim", 
            "| sim flow query=\"data('function/active_instances', filter=filter('service', 'cloudfunctions') and filter('project_id','$project_id_tok$') and filter('region','$zone_tok$') and filter('function_name','$function_tok$')).publish()\"",
          (if (metricstag=="addon",
            "`gcp_metrics` sourcetype=google:gcp:monitoring resource.labels.project_id=$project_id_tok$ resource.labels.region=$zone_tok$ resource.labels.function_name=$function_tok$ metric.type=cloudfunctions.googleapis.com/function/active_instances
|rename points{}.value.int64Value as _value resource.labels.function_name as function_name","")))))
      
      |eval fn_memory=
          if(metricstag=="metrics",
            "| mstats avg(_value) as _value WHERE `gcp_metrics` metric_name=\"cloudfunctions.googleapis.com/function/user_memory_bytes\"  AND project_id IN ($project_id_tok$) AND region IN ($zone_tok$) AND function_name IN ($function_tok$) span=$secs_for_bin$s BY function_name",
          (if (metricstag=="sim", 
            "| sim flow query=\"data('function/user_memory_bytes', filter=filter('service', 'cloudfunctions') and filter('project_id','$project_id_tok$') and filter('region','$zone_tok$') and filter('function_name','$function_tok$')).publish()\"",
          (if (metricstag=="addon",
            "`gcp_metrics` sourcetype=google:gcp:monitoring resource.labels.project_id=$project_id_tok$ resource.labels.region=$zone_tok$ resource.labels.function_name=$function_tok$ metric.type=cloudfunctions.googleapis.com/function/user_memory_bytes
|rename points{}.value.distributionValue.mean as _value resource.labels.function_name as function_name",""))))) 
      
      |eval fn_network=
          if(metricstag=="metrics",
            "| mstats avg(_value) as _value WHERE `gcp_metrics` metric_name=\"cloudfunctions.googleapis.com/function/network_egress\"  AND project_id IN ($project_id_tok$) AND region IN ($zone_tok$) AND function_name IN ($function_tok$) span=$secs_for_bin$s BY function_name",
          (if (metricstag=="sim", 
            "| sim flow query=\"data('function/network_egress', filter=filter('service', 'cloudfunctions') and filter('project_id','$project_id_tok$') and filter('region','$zone_tok$') and filter('function_name','$function_tok$')).publish()\"",
          (if (metricstag=="addon",
            "`gcp_metrics` sourcetype=google:gcp:monitoring resource.labels.project_id=$project_id_tok$ resource.labels.region=$zone_tok$ resource.labels.function_name=$function_tok$ metric.type=cloudfunctions.googleapis.com/function/network_egress
|rename points{}.value.int64Value as _value resource.labels.function_name as function_name","")))))

        
             

    </query>
    <done>
      <set token="metrics_source">$result.metricstag$</set>
      <set token="base_info_search">$result.base_info_search$</set>
      <set token="fn_execution">$result.fn_execution$</set>
      <set token="fn_execution_count">$result.fn_execution_count$</set>
      <set token="fn_instances">$result.fn_instances$</set>
      <set token="fn_memory">$result.fn_memory$</set>
      <set token="fn_network">$result.fn_network$</set>
    </done>
  </search>
  <search id="source_data_query">
    <query>
      |makeresults | eval addon="data."| eval dataflow="" 
      |eval datatag=`datatag`
    </query>
    <done>
      <set token="datatag">$result.datatag$</set>
    </done>
  </search>
  <search id="tstats_query">
    <query>
      |makeresults 
      |eval usetstats="|tstats fillnull_value=\"null\" count where" 
      |eval notstats=" "
      |eval tstatstag=`tstatstag`
      |eval tstats_post_tag=if(tstatstag==" "," ","by _time, $datatag$resource.labels.function_name $datatag$severity, $datatag$textPayload, $datatag$protoPayload.methodName span=1s")
    </query>
    <done>
      <set token="tstatstag">$result.tstatstag$</set>
      <set token="tstats_post_tag">$result.tstats_post_tag$</set>
    </done>
  </search>
  <search id="baseInfo">
    <query>
      $base_info_search$
    </query>
    <earliest>$time.earliest$</earliest>
    <latest>$time.latest$</latest>
  </search>
  
  <fieldset submitButton="false">
    <input type="time" token="time">
      <label></label>
      <default>
        <earliest>-24h@h</earliest>
        <latest>now</latest>
      </default>
    </input>
    <input type="dropdown" token="project_id_tok" searchWhenChanged="true">
      <label>Project ID</label>
      <fieldForLabel>project_id</fieldForLabel>
      <fieldForValue>project_id</fieldForValue>
      <search base="baseInfo">
        <query>dedup project_id</query>
      </search>
      <choice value="*">ALL</choice>
      <default>*</default>
      <initialValue>*</initialValue>
    </input>
    <input type="dropdown" token="zone_tok" searchWhenChanged="true">
      <label>Zone</label>
      <choice value="*">ALL</choice>
      <default>*</default>
      <initialValue>*</initialValue>
      <fieldForLabel>region</fieldForLabel>
      <fieldForValue>region</fieldForValue>
      <search base="baseInfo">
        <query>search project_id IN ($project_id_tok$)|dedup region</query>
      </search>
    </input>
    <input type="dropdown" token="function_tok" searchWhenChanged="true">
      <label>Function</label>
      <fieldForLabel>function_name</fieldForLabel>
      <fieldForValue>function_name</fieldForValue>
      <search base="baseInfo">
        <query>search project_id IN ($project_id_tok$) AND region IN ($zone_tok$) |dedup function_name</query>
      </search>
      <choice value="*">ALL</choice>
      <default>*</default>
      <initialValue>*</initialValue>
    </input>
    <input type="dropdown" token="time_resolution" searchWhenChanged="true">
      <label>Chart resolution</label>
      <choice value="75">Crude</choice>
      <choice value="250">Low</choice>
      <choice value="500">Medium</choice>
      <choice value="750">High</choice>
      <choice value="999">Ultra</choice>
      <change>
        <eval token="form.secs_for_bin">if(isnull($time.latest$),$minspan$, if((round(relative_time(now(), $time.latest$)-relative_time(now(), $time.earliest$))/$time_resolution$)&lt;$minspan$,$minspan$,round(((relative_time(now(), $time.latest$)-relative_time(now(), $time.earliest$))/$time_resolution$)/$minspan$)*$minspan$))</eval>
      </change>
      <default>500</default>
      <initialValue>500</initialValue>
    </input>
    <input type="text" token="secs_for_bin" depends="$never$">
      <label>secs_for_bin</label>
      <default>1200</default>
    </input>
  </fieldset>
  <row>
    <panel>
      <title>Functions</title>
      <table>
        <search base="baseInfo">
          <query>search project_id IN ($project_id_tok$) AND region IN ($zone_tok$) AND function_name IN ($function_tok$)
| dedup function_name, project_id, region
| rename function_name as Function, project_id as Project,region as Zone, status as Status, memory as Memory, trigger_type as Trigger
|table Project, Zone, Function, Memory, Status, Trigger</query>
        </search>
        <option name="count">20</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">cell</option>
        <option name="percentagesRow">false</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">false</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
        <drilldown>
          <link target="_blank">/app/Splunk_gcp_dashboards/gcp_cloud_function_details?form.project_id_tok=$row.Project$&amp;form.function_tok=$row.Function$</link>
        </drilldown>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <center>
          <h1>Click on a function to see more details</h1>
        </center>
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <title>Execution Times (Milliseconds)</title>
      <chart>
        <search>
          <query>$fn_execution$
| eval ms=_value/1000000
| timechart avg(ms) as Milliseconds  limit=10 useother=false BY function_name
</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisX.abbreviation">none</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.abbreviation">auto</option>
        <option name="charting.axisY.includeZero">1</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.abbreviation">none</option>
        <option name="charting.axisY2.enabled">0</option>
        <option name="charting.axisY2.scale">inherit</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.bubbleMaximumSize">50</option>
        <option name="charting.chart.bubbleMinimumSize">10</option>
        <option name="charting.chart.bubbleSizeBy">area</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.gridLinesX.showMajorLines">1</option>
        <option name="charting.layout.splitSeries">0</option>
        <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.mode">seriesCompare</option>
        <option name="charting.legend.placement">right</option>
        <option name="charting.lineWidth">2</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">0</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
      </chart>
    </panel>
    <panel>
      <title>Execution Count</title>
      <chart>
        <search>
          <query>$fn_execution_count$
| timechart avg(_value) as Count  limit=10 useother=false BY function_name
| fields - _span*</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisX.abbreviation">none</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.abbreviation">auto</option>
        <option name="charting.axisY.includeZero">1</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.abbreviation">none</option>
        <option name="charting.axisY2.enabled">0</option>
        <option name="charting.axisY2.scale">inherit</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.bubbleMaximumSize">50</option>
        <option name="charting.chart.bubbleMinimumSize">10</option>
        <option name="charting.chart.bubbleSizeBy">area</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.gridLinesX.showMajorLines">1</option>
        <option name="charting.layout.splitSeries">0</option>
        <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.mode">seriesCompare</option>
        <option name="charting.legend.placement">right</option>
        <option name="charting.lineWidth">2</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">0</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>Active Instances</title>
      <chart>
        <search>
          <query>$fn_instances$
| timechart avg(_value) as Count  limit=10 useother=false BY function_name
| fields - _span*</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisX.abbreviation">none</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.abbreviation">auto</option>
        <option name="charting.axisY.includeZero">1</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.abbreviation">none</option>
        <option name="charting.axisY2.enabled">0</option>
        <option name="charting.axisY2.scale">inherit</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.bubbleMaximumSize">50</option>
        <option name="charting.chart.bubbleMinimumSize">10</option>
        <option name="charting.chart.bubbleSizeBy">area</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.gridLinesX.showMajorLines">1</option>
        <option name="charting.layout.splitSeries">0</option>
        <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.mode">seriesCompare</option>
        <option name="charting.legend.placement">right</option>
        <option name="charting.lineWidth">2</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">0</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
      </chart>
    </panel>
    <panel>
      <title>Network Egress (MB)</title>
      <chart>
        <search>
          <query>$fn_network$
| eval mb=_value/1024/1024 
| timechart avg(mb) as MB  limit=10 useother=false BY function_name
| fields - _span*</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisX.abbreviation">none</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.abbreviation">auto</option>
        <option name="charting.axisY.includeZero">1</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.abbreviation">none</option>
        <option name="charting.axisY2.enabled">0</option>
        <option name="charting.axisY2.scale">inherit</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.bubbleMaximumSize">50</option>
        <option name="charting.chart.bubbleMinimumSize">10</option>
        <option name="charting.chart.bubbleSizeBy">area</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.gridLinesX.showMajorLines">1</option>
        <option name="charting.layout.splitSeries">0</option>
        <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.mode">seriesCompare</option>
        <option name="charting.legend.placement">right</option>
        <option name="charting.lineWidth">2</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">0</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
      </chart>
    </panel>
  </row>
</form>